<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>JiangHongJie&#39;s Blog</title>
        <link>https://jssnow.github.io/</link>
        <description>姜红杰的博客</description>
        <generator>Hugo 0.74.3 https://gohugo.io/</generator>
        
            <language>zh-CN</language>
        
        
            <managingEditor>jhj767658181@gmail.com (姜红杰)</managingEditor>
        
        
            <webMaster>jhj767658181@gmail.com (姜红杰)</webMaster>
        
        
            <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
        
        <lastBuildDate>Wed, 05 Aug 2020 22:49:02 &#43;0800</lastBuildDate>
        
            <atom:link rel="self" type="application/rss&#43;xml" href="https://jssnow.github.io/rss.xml" />
        
        
            <item>
                <title>Golang应用打包docker镜像并运行</title>
                <link>https://jssnow.github.io/posts/golang%E5%BA%94%E7%94%A8%E6%89%93%E5%8C%85docker%E9%95%9C%E5%83%8F%E5%B9%B6%E8%BF%90%E8%A1%8C/</link>
                <guid isPermaLink="true">https://jssnow.github.io/posts/golang%E5%BA%94%E7%94%A8%E6%89%93%E5%8C%85docker%E9%95%9C%E5%83%8F%E5%B9%B6%E8%BF%90%E8%A1%8C/</guid>
                <pubDate>Wed, 05 Aug 2020 22:39:05 &#43;0800</pubDate>
                
                    <author>jhj767658181@gmail.com (姜红杰)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;p&gt;使用gin框架起一个最基础的web服务来说明整个流程。&lt;/p&gt;
&lt;h3 id=&#34;编写程序代码&#34;&gt;编写程序代码&lt;/h3&gt;
&lt;p&gt;main.go&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/gin-gonic/gin&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/ping&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;s&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;pong&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0.0.0.0:8080&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// listen and serve on 0.0.0.0:8080 (for windows &amp;#34;localhost:8080&amp;#34;)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这里需要注意的是docker里面的host不能配置&lt;code&gt;127.0.0.1&lt;/code&gt;或者&lt;code&gt;192.168.0.1&lt;/code&gt;否则宿主机器将无法访问端口。所以这里服务启动时要绑定在&lt;code&gt;0.0.0.0&lt;/code&gt;上。&lt;/p&gt;
&lt;h3 id=&#34;编写dockerfile文件&#34;&gt;编写Dockerfile文件&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Dockerfile&#34; data-lang=&#34;Dockerfile&#34;&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; golang:alpine&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;MAINTAINER&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; JiangHongJie &amp;#34;jhj767658181@gmail.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# docker中的工作目录&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WORKDIR&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; $GOPATH/src/gin_docker&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 将当前目录同步到docker工作目录下，也可以只配置需要的目录和文件（配置目录、编译后的程序等）&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ADD&lt;/span&gt; . ./&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 由于所周知的原因，某些包会出现下载超时。这里在docker里也使用go module的代理服务&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ENV&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GO111MODULE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;on
&lt;span class=&#34;k&#34;&gt;ENV&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GOPROXY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;https://goproxy.io&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定编译完成后的文件名，可以不设置使用默认的，最后一步要执行该文件名&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; go build -o gin_docker .&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPOSE&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; 8080&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 这里跟编译完的文件名一致&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ENTRYPOINT&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./gin_docker&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;构建docker镜像&#34;&gt;构建docker镜像&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo docker build -t gin_docker .
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;构建完成查看镜像列表&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;vagrant@homestead:~/go_project/gin_docker$ docker image ls
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gin_docker          latest              ed64de3e98e9        &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; hours ago         469MB
logforce            latest              3cfe19164260        &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; hours ago         511MB
&amp;lt;none&amp;gt;              &amp;lt;none&amp;gt;              d20ebc82d1e6        &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt; hours ago         810MB
&amp;lt;none&amp;gt;              &amp;lt;none&amp;gt;              c19c1e8968e1        &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt; hours ago         828MB
golang              alpine              30df784d6206        &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; weeks ago         370MB
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;启动容器&#34;&gt;启动容器&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;vagrant@homestead:~/go_project/gin_docker$ docker run --name gin_docker -p 8080:8080 -d gin_docker
ae97da70bc94a4c9a235f44a7d12030b283a2fabd56fc2be1a70ffef3a805c71
vagrant@homestead:~/go_project/gin_docker$ docker container ls
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES
ae97da70bc94        gin_docker          &lt;span class=&#34;s2&#34;&gt;&amp;#34;./gin_docker&amp;#34;&lt;/span&gt;      &lt;span class=&#34;m&#34;&gt;24&lt;/span&gt; seconds ago      Up &lt;span class=&#34;m&#34;&gt;22&lt;/span&gt; seconds       0.0.0.0:8080-&amp;gt;8080/tcp   gin_docker
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;访问服务&#34;&gt;访问服务&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;vagrant@homestead:~/go_project/gin_docker$ curl 127.0.0.1:8080/ping
&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;pong&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;参考文章&#34;&gt;参考文章&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.pilipala.co/articles/2019/12/21/1576858786902.html&#34;&gt;使用 docker build 时 下载 golang.org/x 包失败&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                
                
                
                
                
                    
                        
                    
                        
                    
                
            </item>
        
            <item>
                <title>Golang Printf函数副词参数列表</title>
                <link>https://jssnow.github.io/posts/golang-printf%E5%87%BD%E6%95%B0%E5%89%AF%E8%AF%8D%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8/</link>
                <guid isPermaLink="true">https://jssnow.github.io/posts/golang-printf%E5%87%BD%E6%95%B0%E5%89%AF%E8%AF%8D%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8/</guid>
                <pubDate>Mon, 27 Jul 2020 15:03:54 &#43;0000</pubDate>
                
                    <author>jhj767658181@gmail.com (姜红杰)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h1 id=&#34;printf函数副词参数列表&#34;&gt;Printf函数副词参数列表&lt;/h1&gt;
&lt;h2 id=&#34;general&#34;&gt;General&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%v&lt;/code&gt; 以默认的方式打印变量的值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%T&lt;/code&gt; 打印变量的类型&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;integer&#34;&gt;Integer&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%d&lt;/code&gt; 整型的十进制表示&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%+d&lt;/code&gt; 带符号的整型,&lt;code&gt;fmt.Printf(&amp;quot;%+d&amp;quot;,255)&lt;/code&gt;输出+255&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%q&lt;/code&gt; 打印单引号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%o&lt;/code&gt; 不带0的八进制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%#o&lt;/code&gt; 带0的八进制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%x&lt;/code&gt; 小写的十六进制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%X&lt;/code&gt; 大写的十六进制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%#x&lt;/code&gt; 带0x的十六进制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%U&lt;/code&gt; 打印Unicode字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%#U&lt;/code&gt; 打印带字符的Unicode&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%b&lt;/code&gt; 打印整型的二进制&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;integet-width&#34;&gt;Integet width&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%5d&lt;/code&gt; 表示该整型最大的长度为5&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%-5d&lt;/code&gt; 则相反,打印结果会自动左对齐&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%05d&lt;/code&gt; 会在数字前面补0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fload&#34;&gt;Fload&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%f(=%.6f)&lt;/code&gt; 6位小数点&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%e(=%.6e)&lt;/code&gt; 6位小数点(科学计数法)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%g&lt;/code&gt; 用最少的数字来表示&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%.3g&lt;/code&gt; 最多3位数字来表示&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%.3f&lt;/code&gt; 最多3位小数来表示&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;string&#34;&gt;String&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%s&lt;/code&gt; 正常输出字符串&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%q&lt;/code&gt; 字符串带双引号,字符串中的引号带转义符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%#q&lt;/code&gt; 字符串带反引号,如果字符串内有反引号,就用双引号代替&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%x&lt;/code&gt; 将字符串转换为小写的16进制格式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%X&lt;/code&gt; 将字符串转换为大写的16进制格式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;% x&lt;/code&gt; 带空格的16进制格式&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;string-width&#34;&gt;String width&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%5s&lt;/code&gt; 最小宽度为5&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%-5s&lt;/code&gt; 最小宽度为5(左对齐)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%.5s&lt;/code&gt; 最大宽度为5&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%-5.7&lt;/code&gt; 最小宽度为5,最大宽度为7(左对齐)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%5.3&lt;/code&gt; 如果宽度大于3则截断&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%05s&lt;/code&gt; 如果宽度小于5,就会在字符串前面补0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;struct&#34;&gt;Struct&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%v&lt;/code&gt; 正常打印.比如:&lt;code&gt;{sam{12345 67890}}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%+v&lt;/code&gt; 带字段名称,比如:&lt;code&gt;{name:sam phone:{mobile:12345 office:67890}}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%#v&lt;/code&gt; 用Go的语法打印,例如:&lt;code&gt;main.People{name:&amp;quot;sam&amp;quot;,phone:main.Phone{mobile:&amp;quot;12345&amp;quot;,office:&amp;quot;67890&amp;quot;}}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;boolean&#34;&gt;Boolean&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%t&lt;/code&gt; 打印布尔值true或者false&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pointer&#34;&gt;Pointer&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%p&lt;/code&gt; 带0x的指针&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%#p&lt;/code&gt; 不带0x的指针&lt;/li&gt;
&lt;/ul&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://jssnow.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/">编程语言</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://jssnow.github.io/tags/golang/">Golang</category>
                                
                            
                        
                    
                
            </item>
        
    </channel>
</rss>
