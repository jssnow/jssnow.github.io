<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
    <title type="text">JiangHongJie&#39;s Blog</title>
    <subtitle type="html">姜红杰的博客</subtitle>
    <updated>2020-07-29T22:47:42&#43;08:00</updated>
    <id>https://vlrog.gitee.com/</id>
    <link rel="alternate" type="text/html" href="https://vlrog.gitee.com/" />
    <link rel="self" type="application/atom&#43;xml" href="https://vlrog.gitee.com/atom.xml" />
    <author>
            <name>姜红杰</name>
            <uri>https://vlrog.gitee.com/</uri>
            
                <email>jhj767658181@gmail.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    <generator uri="https://gohugo.io/" version="0.74.3">Hugo</generator>
        <entry>
            <title type="text">Golang Printf函数副词参数列表</title>
            <link rel="alternate" type="text/html" href="https://vlrog.gitee.com/posts/golang-printf%E5%87%BD%E6%95%B0%E5%89%AF%E8%AF%8D%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8/" />
            <id>https://vlrog.gitee.com/posts/golang-printf%E5%87%BD%E6%95%B0%E5%89%AF%E8%AF%8D%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8/</id>
            <updated>2020-07-29T22:13:13&#43;08:00</updated>
            <published>2020-07-27T15:03:54&#43;00:00</published>
            <author>
                    <name>姜红杰</name>
                    <uri>https://vlrog.gitee.com/</uri>
                    <email>jhj767658181@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Printf函数副词参数列表 General %v 以默认的方式打印变量的值 %T 打印变量的类型 Integer %d 整型的十……</summary>
            
                <content type="html">&lt;h1 id=&#34;printf函数副词参数列表&#34;&gt;Printf函数副词参数列表&lt;/h1&gt;
&lt;h2 id=&#34;general&#34;&gt;General&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%v&lt;/code&gt; 以默认的方式打印变量的值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%T&lt;/code&gt; 打印变量的类型&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;integer&#34;&gt;Integer&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%d&lt;/code&gt; 整型的十进制表示&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%+d&lt;/code&gt; 带符号的整型,&lt;code&gt;fmt.Printf(&amp;quot;%+d&amp;quot;,255)&lt;/code&gt;输出+255&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%q&lt;/code&gt; 打印单引号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%o&lt;/code&gt; 不带0的八进制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%#o&lt;/code&gt; 带0的八进制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%x&lt;/code&gt; 小写的十六进制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%X&lt;/code&gt; 大写的十六进制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%#x&lt;/code&gt; 带0x的十六进制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%U&lt;/code&gt; 打印Unicode字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%#U&lt;/code&gt; 打印带字符的Unicode&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%b&lt;/code&gt; 打印整型的二进制&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;integet-width&#34;&gt;Integet width&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%5d&lt;/code&gt; 表示该整型最大的长度为5&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%-5d&lt;/code&gt; 则相反,打印结果会自动左对齐&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%05d&lt;/code&gt; 会在数字前面补0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fload&#34;&gt;Fload&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%f(=%.6f)&lt;/code&gt; 6位小数点&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%e(=%.6e)&lt;/code&gt; 6位小数点(科学计数法)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%g&lt;/code&gt; 用最少的数字来表示&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%.3g&lt;/code&gt; 最多3位数字来表示&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%.3f&lt;/code&gt; 最多3位小数来表示&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;string&#34;&gt;String&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%s&lt;/code&gt; 正常输出字符串&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%q&lt;/code&gt; 字符串带双引号,字符串中的引号带转义符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%#q&lt;/code&gt; 字符串带反引号,如果字符串内有反引号,就用双引号代替&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%x&lt;/code&gt; 将字符串转换为小写的16进制格式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%X&lt;/code&gt; 将字符串转换为大写的16进制格式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;% x&lt;/code&gt; 带空格的16进制格式&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;string-width&#34;&gt;String width&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%5s&lt;/code&gt; 最小宽度为5&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%-5s&lt;/code&gt; 最小宽度为5(左对齐)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%.5s&lt;/code&gt; 最大宽度为5&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%-5.7&lt;/code&gt; 最小宽度为5,最大宽度为7(左对齐)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%5.3&lt;/code&gt; 如果宽度大于3则截断&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%05s&lt;/code&gt; 如果宽度小于5,就会在字符串前面补0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;struct&#34;&gt;Struct&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%v&lt;/code&gt; 正常打印.比如:&lt;code&gt;{sam{12345 67890}}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%+v&lt;/code&gt; 带字段名称,比如:&lt;code&gt;{name:sam phone:{mobile:12345 office:67890}}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%#v&lt;/code&gt; 用Go的语法打印,例如:&lt;code&gt;main.People{name:&amp;quot;sam&amp;quot;,phone:main.Phone{mobile:&amp;quot;12345&amp;quot;,office:&amp;quot;67890&amp;quot;}}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;boolean&#34;&gt;Boolean&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%t&lt;/code&gt; 打印布尔值true或者false&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pointer&#34;&gt;Pointer&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%p&lt;/code&gt; 带0x的指针&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%#p&lt;/code&gt; 不带0x的指针&lt;/li&gt;
&lt;/ul&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://vlrog.gitee.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/" term="编程语言" label="编程语言" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://vlrog.gitee.com/tags/golang/" term="Golang" label="Golang" />
                            
                        
                    
                
            
        </entry>
    
</feed>
